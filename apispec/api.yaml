---
openapi: "3.0.1"
paths:
  /api/opi/Products/{id}:
    get:
      parameters:
      - name: "id"
        in: "path"
        required: true
        style: "simple"
        schema:
          type: "integer"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/ProductComposite"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/ProductComposite"
          description: "default response"
      operationId: "readProductComposite_1"
    put:
      parameters:
      - name: "id"
        in: "path"
        required: true
        style: "simple"
        schema:
          type: "integer"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/ProductComposite"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/ProductComposite"
          description: "default response"
      operationId: "updateProductComposite_1"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              $ref: "#/components/schemas/ProductComposite"
        required: true
    delete:
      parameters:
      - name: "id"
        in: "path"
        required: true
        style: "simple"
        schema:
          type: "integer"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "boolean"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "boolean"
          description: "default response"
      operationId: "deleteProductComposite_1"
  /api/opi/Products:
    get:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  $ref: "#/components/schemas/ProductComposite"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  $ref: "#/components/schemas/ProductComposite"
          description: "default response"
      operationId: "readAllProductComposites_1"
    post:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/ProductComposite"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/ProductComposite"
          description: "default response"
      operationId: "createProductComposite_1"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              $ref: "#/components/schemas/ProductComposite"
        required: true
  /api/health:
    get:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: "object"
                nullable: true
          description: "default response"
        default:
          content:
            application/json:
              schema:
                properties: {}
                type: "object"
                nullable: true
          description: "default response"
      operationId: "getChecks"
  /api/metrics/{registry}/{metric}:
    get:
      parameters:
      - name: "registry"
        in: "path"
        required: true
        style: "simple"
        schema:
          type: "string"
      - name: "metric"
        in: "path"
        required: true
        style: "simple"
        schema:
          type: "string"
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: "string"
          description: "default response"
        default:
          content:
            text/plain:
              schema:
                type: "string"
          description: "default response"
      operationId: "getText_1_2"
    options:
      parameters:
      - name: "registry"
        in: "path"
        required: true
        style: "simple"
        schema:
          type: "string"
      - name: "metric"
        in: "path"
        required: true
        style: "simple"
        schema:
          type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
          description: "default response"
      operationId: "getMetadata"
  /api/metrics:
    get:
      parameters: []
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: "string"
          description: "default response"
        default:
          content:
            text/plain:
              schema:
                type: "string"
          description: "default response"
      operationId: "getText"
  /api/metrics/{registry}:
    get:
      parameters:
      - name: "registry"
        in: "path"
        required: true
        style: "simple"
        schema:
          type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
          description: "default response"
      operationId: "getJson_1_2"
    options:
      parameters:
      - name: "registry"
        in: "path"
        required: true
        style: "simple"
        schema:
          type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
          description: "default response"
        default:
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
          description: "default response"
      operationId: "getMetadata_1"
components:
  schemas:
    ProductComposite:
      properties:
        name:
          type: "string"
        parts:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/ProductPart"
        id:
          type: "integer"
      type: "object"
    ProductPart:
      properties:
        name:
          type: "string"
        id:
          type: "integer"
      type: "object"
    java_lang_Object:
      properties: {}
      type: "object"
